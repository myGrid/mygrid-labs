package net.sf.taverna.t2.activities.rest;
import URISignatureHandler;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.*;

import URISignatureHandler.URIGenerationFromSignatureException;
import URISignatureHandler.URISignatureParsingException;
import static org.junit.Assert.*;

public class URISignatureHandlerTest
{
  // ==========================================================================
  //          TEST PLACEHOLDER EXTRACTION FROM URI SIGNATURE
  // ==========================================================================
  
  @Test
  public void happyPathScenario() {
    List<String> placeholders = URISignatureHandler.extractPlaceholders("http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={unit}");
    assertTrue("Wrong number of placeholders extracted", placeholders != null && placeholders.size() == 3);
    assertEquals("Wrong first placeholder", "sop_id", placeholders.get(0));
    assertEquals("Wrong second placeholder", "cond_id", placeholders.get(1));
    assertEquals("Wrong third placeholder", "unit", placeholders.get(2));
  }
  
  @Test(expected=URISignatureHandler.URISignatureParsingException.class)
  public void nestedPlaceholders_ExceptionExpected() {
    List<String> placeholders = URISignatureHandler.extractPlaceholders("http://sysmo-db.org/sops/{sop{id}}/experimental_conditions/{cond_id}?condition_unit={unit}");
  }
  
  @Test(expected=URISignatureHandler.URISignatureParsingException.class)
  public void duplicatePlaceholders_ExceptionExpected() {
    List<String> placeholders = URISignatureHandler.extractPlaceholders("http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={sop_id}");
  }
  
  
  
  // ==========================================================================
  //          TEST COMPLETE URI GENERATION FROM URI SIGNATURE + PARAMETERS
  // ==========================================================================
  
  @SuppressWarnings("serial")
  @Test
  public void successfulURIGeneration()
  {
    String uriSignature = "http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={unit}";
    Map<String,String> parameters = new HashMap<String,String>(){{
      put("sop_id", "111");
      put("unit", "33");
      put("cond_id", "2222");
    }};
    
    String completeURI = URISignatureHandler.generateCompleteURI(uriSignature, parameters);
    
    assertEquals("http://sysmo-db.org/sops/111/experimental_conditions/2222?condition_unit=33",
                 completeURI);
  }
  
  
  @Test(expected=URISignatureHandler.URISignatureParsingException.class)
  public void duplicatePlaceholderURIGeneration_FailureExpected()
  {
    String uriSignature = "http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={sop_id}";
    Map<String,String> parameters = new HashMap<String,String>(){{
      put("sop_id", "111");
      put("unit", "33");
      put("cond_id", "2222");
    }};
    
    String completeURI = URISignatureHandler.generateCompleteURI(uriSignature, parameters);
    
    assertEquals("http://sysmo-db.org/sops/111/experimental_conditions/2222?condition_unit=33",
                 completeURI);
  }
  
  
  @Test(expected=URISignatureHandler.URIGenerationFromSignatureException.class)
  public void missingParameterURIGeneration_FailureExpected()
  {
    String uriSignature = "http://sysmo-db.org/sops/{sop_id}/experimental_conditions/{cond_id}?condition_unit={unit}";
    Map<String,String> parameters = new HashMap<String,String>(){{
      put("sop_id", "111");
      put("cond_id", "2222");
    }};
    
    String completeURI = URISignatureHandler.generateCompleteURI(uriSignature, parameters);
    
    assertEquals("http://sysmo-db.org/sops/111/experimental_conditions/2222?condition_unit=33",
                 completeURI);
  }
}
