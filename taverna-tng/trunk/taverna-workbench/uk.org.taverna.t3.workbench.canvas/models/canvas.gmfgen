<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" packageNamePrefix="uk.org.taverna.t3.workbench.canvas.diagram"
    sameFileForDiagramAndModel="true"
    domainFileExtension="canvas">
  <diagram
      visualID="1000"
      editPartClassName="CanvasEditPart"
      itemSemanticEditPolicyClassName="CanvasItemSemanticEditPolicy"
      canonicalEditPolicyClassName="CanvasCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="CanvasEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="canvas.genmodel#//canvas/Canvas"/>
    <childNodes
        visualID="3001"
        editPartClassName="Processor2EditPart"
        itemSemanticEditPolicyClassName="Processor2ItemSemanticEditPolicy"
        notationViewFactoryClassName="ProcessorViewFactory"
        canonicalEditPolicyClassName="Processor2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1 //@diagram/@childNodes.2"
        graphicalNodeEditPolicyClassName="Processor2GraphicalNodeEditPolicy"
        createCommandClassName="Processor2CreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ProcessorEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="XY_LAYOUT"
          className="ProcessorFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProcessorFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcessorNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcessorTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcessorLabelFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProcessorFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureProcessorNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcessorNameFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureProcessorNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureProcessorTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcessorTypeFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureProcessorTypeFigure);&#xA;&#xA;&#xA;&#xA;fFigureProcessorLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcessorLabelFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureProcessorLabelFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcessorNameFigure() {&#xA;&#x9;&#x9;return fFigureProcessorNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcessorTypeFigure() {&#xA;&#x9;&#x9;return fFigureProcessorTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcessorLabelFigure() {&#xA;&#x9;&#x9;return fFigureProcessorLabelFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 20, 20, 20);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 162, 205, 90);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="80"
            height="40"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/Processor"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Component/processors"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Component/processors"/>
      </modelFacet>
      <labels
          visualID="5003"
          editPartClassName="ProcessorNameEditPart"
          itemSemanticEditPolicyClassName="ProcessorNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcessorNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcessorNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="canvas.genmodel#//canvas/Processor/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3002"
        editPartClassName="ProcessorInputEditPart"
        itemSemanticEditPolicyClassName="ProcessorInputItemSemanticEditPolicy"
        notationViewFactoryClassName="ProcessorInputViewFactory"
        canonicalEditPolicyClassName="ProcessorInputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ProcessorInputGraphicalNodeEditPolicy"
        createCommandClassName="ProcessorInputCreateCommand"
        containers="//@diagram/@childNodes.0"
        preferredSideName="NORTH">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ProcessorInputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ProcessorInputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProcessorInputFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcessorInputNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProcessorInputFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureProcessorInputNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcessorInputNameFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureProcessorInputNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcessorInputNameFigure() {&#xA;&#x9;&#x9;return fFigureProcessorInputNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 20, 20, 20);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="10"
            height="10"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/ProcessorInput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Processor/processorInputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Processor/processorInputs"/>
      </modelFacet>
      <labels
          visualID="5004"
          editPartClassName="ProcessorInputNameEditPart"
          itemSemanticEditPolicyClassName="ProcessorInputNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcessorInputNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcessorInputNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="canvas.genmodel#//canvas/Port/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3003"
        editPartClassName="ProcessorOutputEditPart"
        itemSemanticEditPolicyClassName="ProcessorOutputItemSemanticEditPolicy"
        notationViewFactoryClassName="ProcessorOutputViewFactory"
        canonicalEditPolicyClassName="ProcessorOutputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ProcessorOutputGraphicalNodeEditPolicy"
        createCommandClassName="ProcessorOutputCreateCommand"
        containers="//@diagram/@childNodes.0"
        preferredSideName="SOUTH">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ProcessorOutputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ProcessorOutputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ProcessorOutputFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureProcessorOutputNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ProcessorOutputFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureProcessorOutputNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureProcessorOutputNameFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureProcessorOutputNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureProcessorOutputNameFigure() {&#xA;&#x9;&#x9;return fFigureProcessorOutputNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 20, 20, 20);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="10"
            height="10"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/ProcessorOutput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Processor/processorOutputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Processor/processorOutputs"/>
      </modelFacet>
      <labels
          visualID="5005"
          editPartClassName="ProcessorOutputNameEditPart"
          itemSemanticEditPolicyClassName="ProcessorOutputNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ProcessorOutputNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureProcessorOutputNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="canvas.genmodel#//canvas/Port/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="ComponentInputEditPart"
        itemSemanticEditPolicyClassName="ComponentInputItemSemanticEditPolicy"
        notationViewFactoryClassName="ComponentInputViewFactory"
        canonicalEditPolicyClassName="ComponentInputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ComponentInputGraphicalNodeEditPolicy"
        createCommandClassName="ComponentInputCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ComponentInputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ComponentInputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComponentInputFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComponentInputFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel componentInputName0 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;componentInputName0.setText(&quot;&quot;);&#xA;&#xA;this.add(componentInputName0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 20, 20, 20);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="20"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/ComponentInput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Component/componentInputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Component/componentInputs"/>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3005"
        editPartClassName="ComponentOutputEditPart"
        itemSemanticEditPolicyClassName="ComponentOutputItemSemanticEditPolicy"
        notationViewFactoryClassName="ComponentOutputViewFactory"
        canonicalEditPolicyClassName="ComponentOutputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ComponentOutputGraphicalNodeEditPolicy"
        createCommandClassName="ComponentOutputCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ComponentOutputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ComponentOutputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComponentOutputFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComponentOutputFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel componentOutputName0 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;componentOutputName0.setText(&quot;&quot;);&#xA;&#xA;this.add(componentOutputName0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 20, 20, 20);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="20"
            height="20"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/ComponentOutput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Component/componentOutputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Component/componentOutputs"/>
      </modelFacet>
    </childNodes>
    <topLevelNodes
        visualID="2004"
        editPartClassName="ComponentEditPart"
        itemSemanticEditPolicyClassName="ComponentItemSemanticEditPolicy"
        notationViewFactoryClassName="ComponentViewFactory"
        canonicalEditPolicyClassName="ComponentCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="ComponentGraphicalNodeEditPolicy"
        createCommandClassName="ComponentCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ComponentEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ComponentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComponentFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureComponentTitleFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureComponentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComponentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureComponentTitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureComponentTitleFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureComponentTitleFigure);&#xA;&#xA;&#xA;&#xA;fFigureComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureComponentLabelFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureComponentTitleFigure() {&#xA;&#x9;&#x9;return fFigureComponentTitleFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureComponentFigure() {&#xA;&#x9;&#x9;return fFigureComponentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="200"
            height="200"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/Component"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Canvas/components"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Canvas/components"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes
        visualID="2003"
        editPartClassName="WorkflowOutputEditPart"
        itemSemanticEditPolicyClassName="WorkflowOutputItemSemanticEditPolicy"
        notationViewFactoryClassName="WorkflowOutputViewFactory"
        canonicalEditPolicyClassName="WorkflowOutputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="WorkflowOutputGraphicalNodeEditPolicy"
        createCommandClassName="WorkflowOutputCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="WorkflowOutputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="WorkflowOutputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class WorkflowOutputFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWorkflowOutputNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWorkflowOutputDepthFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public WorkflowOutputFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureWorkflowOutputNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWorkflowOutputNameFigure.setText(&quot;Default Name&quot;);&#xA;&#xA;this.add(fFigureWorkflowOutputNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureWorkflowOutputDepthFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWorkflowOutputDepthFigure.setText(&quot;Depth: 0&quot;);&#xA;&#xA;this.add(fFigureWorkflowOutputDepthFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWorkflowOutputNameFigure() {&#xA;&#x9;&#x9;return fFigureWorkflowOutputNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWorkflowOutputDepthFigure() {&#xA;&#x9;&#x9;return fFigureWorkflowOutputDepthFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="100"
            height="50"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/WorkflowOutput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Canvas/outputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Canvas/outputs"/>
      </modelFacet>
      <labels
          visualID="5002"
          editPartClassName="WorkflowOutputNameEditPart"
          itemSemanticEditPolicyClassName="WorkflowOutputNameItemSemanticEditPolicy"
          notationViewFactoryClassName="WorkflowOutputNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureWorkflowOutputNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="canvas.genmodel#//canvas/Port/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2001"
        editPartClassName="WorkflowInputEditPart"
        itemSemanticEditPolicyClassName="WorkflowInputItemSemanticEditPolicy"
        notationViewFactoryClassName="WorkflowInputViewFactory"
        canonicalEditPolicyClassName="WorkflowInputCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="WorkflowInputGraphicalNodeEditPolicy"
        createCommandClassName="WorkflowInputCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="WorkflowInputEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="WorkflowInputFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class WorkflowInputFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWorkflowInputNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureWorkflowInputDepthFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public WorkflowInputFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureWorkflowInputNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWorkflowInputNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureWorkflowInputNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureWorkflowInputDepthFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureWorkflowInputDepthFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureWorkflowInputDepthFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWorkflowInputNameFigure() {&#xA;&#x9;&#x9;return fFigureWorkflowInputNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureWorkflowInputDepthFigure() {&#xA;&#x9;&#x9;return fFigureWorkflowInputDepthFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="100"
            height="50"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="canvas.genmodel#//canvas/WorkflowInput"/>
        <containmentMetaFeature
            href="canvas.genmodel#//canvas/Canvas/inputs"/>
        <childMetaFeature
            href="canvas.genmodel#//canvas/Canvas/inputs"/>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="WorkflowInputNameEditPart"
          itemSemanticEditPolicyClassName="WorkflowInputNameItemSemanticEditPolicy"
          notationViewFactoryClassName="WorkflowInputNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureWorkflowInputNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="canvas.genmodel#//canvas/Port/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4003"
        editPartClassName="SenderReceiversEditPart"
        itemSemanticEditPolicyClassName="SenderReceiversItemSemanticEditPolicy"
        notationViewFactoryClassName="SenderReceiversViewFactory"
        createCommandClassName="SenderReceiversCreateCommand"
        reorientCommandClassName="SenderReceiversReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ConnectionDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConnectionDescriptor extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConnectionDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="canvas.genmodel#//canvas/Sender/receivers"/>
      </modelFacet>
    </links>
    <compartments
        visualID="7001"
        editPartClassName="ComponentComponentCompartmentEditPart"
        itemSemanticEditPolicyClassName="ComponentComponentCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="ComponentComponentCompartmentViewFactory"
        canonicalEditPolicyClassName="ComponentComponentCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.3 //@diagram/@childNodes.4"
        title="ComponentCompartment"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ComponentFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ComponentFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureComponentTitleFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureComponentLabelFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureComponentFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ComponentFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureComponentTitleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureComponentTitleFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureComponentTitleFigure);&#xA;&#xA;&#xA;&#xA;fFigureComponentLabelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureComponentLabelFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureComponentLabelFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureComponentTitleFigure() {&#xA;&#x9;&#x9;return fFigureComponentTitleFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureComponentLabelFigure() {&#xA;&#x9;&#x9;return fFigureComponentLabelFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureComponentFigure() {&#xA;&#x9;&#x9;return fFigureComponentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <palette>
      <groups
          title="canvas">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Component"
            description="Create new Component"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="WorkflowInput"
            description="Create new WorkflowInput"
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="WorkflowOutput"
            description="Create new WorkflowOutput"
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Create connection"
            description="create connection"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Create ComponentInput"
            description="create a component input"
            genNodes="//@diagram/@childNodes.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Create ComponentOutput"
            description="create a component output"
            genNodes="//@diagram/@childNodes.4"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Processor"
            description="Create processor"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ProcessorInput"
            genNodes="//@diagram/@childNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ProcessorOutput"
            genNodes="//@diagram/@childNodes.2"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="uk.org.taverna.t3.workbench.canvas.diagram.general"
        name="Canvas Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="uk.org.taverna.t3.workbench.canvas.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="uk.org.taverna.t3.workbench.canvas.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="uk.org.taverna.t3.workbench.canvas.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="uk.org.taverna.t3.workbench.canvas.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="canvas.genmodel#/"/>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.2/@labels.0/@modelFacet //@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
